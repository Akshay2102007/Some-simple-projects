# -*- coding: utf-8 -*-
"""Python_projects.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1T1NjpuqfKVWEaHsa6Y7OHJJOUFJD_acr

#Number guessing game
"""

import random
def getrandnum():
    return random.randrange(1, 100)
def giveHint(num, guess):
    if guess > (num + 10) or guess < (num - 10):
        return "cold"
    elif num == guess:
        return "right"
    else:
        return "hot"
def runguess():
    secretNum = getrandnum()
    while True:
        guess = int(input("Enter a num between 1 and 100: "))
        hint = giveHint(secretNum, guess)
        if hint == "right":
            print("guessed it right!")
            break
        else:
            print(hint)
if __name__ == '__main__':
    runguess()

"""#Calculator"""

def calculatorDisplay():

    display = """Welcome to AKSHAY's Calculator

Choose one operation:
1. Addition
2. Subtraction
3. Multiplication
4. Division
5. SquareRoot
6. Square
7. Cube
8. A power B
9. Exit
"""
    return(display)
def calculatorFunction(operation_choice):
    if operation_choice == 1:
        print("performing addition")
        a, b = user_input()
        sum = addition(a, b)
        return f"sum is: {sum}"
    elif operation_choice == 2:
        print("performing subtraction")
        a, b = user_input()
        sub = subtraction(a, b)
        return f"difference is: {sub}"
    elif operation_choice == 3:
        print("performing multiplication")
        a, b = user_input()
        mul = multiplication(a, b)
        return f"product is: {mul}"
    elif operation_choice == 4:
        print("performing division")
        a, b = user_input()
        div = division(a, b)
        return f"quotient is: {div}"
    elif operation_choice == 5:
        print("performing square root")
        a = int(input("Enter a number: "))
        sqrt = squareRoot(a)
        return f"square root is: {sqrt}"
    elif operation_choice == 6:
        print("performing square")
        a = int(input("Enter a number: "))
        sq = square(a)
        return f"square is: {sq}"
    elif operation_choice == 7:
        print("performing cube")
        a = int(input("Enter a number: "))
        cb = cube(a)
        return f"cube is: {cb}"
    elif operation_choice == 8:
        print("performing power")
        a = int(input("Enter base number: "))
        b = int(input("Enter power number: "))
        pw = power(a, b)
        return f"{a} raised to power {b} is: {pw}"
    else:
        return("Exiting from calculator,Good bye!")

def user_input():
    print("Enter two numbers")
    a = int(input("Enter Num1: "))
    b = int(input("Enter Num2: "))
    return a, b

def addition(a, b):
    return(a + b)

def subtraction(a, b):
    return(a - b)
def multiplication(a, b):
    return(a * b)
def division(a, b):
    return(a / b)
def squareRoot(a):
    return(a ** 0.5)
def square(a):
    return(a ** 2)
def cube(a):
    return(a ** 3)
def power(a, b):
    return(a ** b)

if __name__ == '__main__':
    while True:
        print(calculatorDisplay())
        user_choice = int(input("Select the operation: "))
        value = calculatorFunction(user_choice)
        print(value)
        # Solution as follows
        if value == "Exiting from calculator,Good bye!":
            break

"""# Password Generator - Random Choices"""

import random
import string

string_char = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
string_num = '0123456789'
string_special = '~!@#$%^&*()'

def userInput():
    length = int(input("Enter len of the pass: "))
    use_special_chars = input("Include special chars ..?(yes/no):").lower() == 'yes'
    use_nums = input("Include nums..?(yes/no): ").lower() == 'yes'
    return(length, use_special_chars, use_nums)

def generate_pass(length, use_special_chars, use_nums):
    """Generates a random password based on user preferences."""
    password = ''
    for _ in range(length-2):
        password += random.choice(string_char)
    if use_nums:
        password = password + random.choice(string_num)
    else:
        password = password + random.choice(string_char)
    if use_special_chars:
        password = password + random.choice(string_special)
    else:
        password = password + random.choice(string_char)
    return password
if __name__ == '__main__':
    length, use_special_chars, use_numbers = userInput()
    generated_pass = generate_pass(length, use_special_chars, use_numbers)
    print("\nGenerated Password:", generated_pass)

"""#Project - Rock Paper Scissors

"""

import random

my_score = 0
comp_score = 0

def get_my_choice():
    """
    function to get mu choice (rock, paper, or scissors)
    """
    while True:
        my_choice = input("Entering my choice (rock, paper, or scissors): ").strip().lower()
        if my_choice in ['rock', 'paper', 'scissors']:
            return my_choice
        else:
            print("Invalid choice! Please enter 'rock', 'paper', or 'scissors'.")

def get_comp_choice():
    """
    function to randomly generate computer's choice
    """
    return random.choice(['rock', 'paper', 'scissors'])

def determine_winner(my_choice, comp_choice):
    """
    function to determine the winner of game
    """
    global my_score, comp_score;

    if my_choice == comp_choice:
        return "It's a tie!"
    elif (my_choice == 'rock' and comp_choice == 'scissors') or \
         (my_choice == 'paper' and comp_choice == 'rock') or \
         (my_choice == 'scissors' and comp_choice == 'paper'):

        my_score = my_score + 1
        return "Wow! i won this round!"
    else:
        comp_score = comp_score + 1
        return "Comp wins this round!"

def overall_winner(my_score, comp_score):
    if my_score > comp_score:
        return("I won overall match")
    elif my_score < comp_score:
        return("Computer won overall match")
    else:
        return("The match is tied")


if __name__ == '__main__':
    print("Let's play Rock, Paper, Scissors!")
    print("This game is the best of 3!")
    print("\n")
    n = int(input("How many rounds do you want to play? "))
    count = 1
    while n > 0:
        print(f"round: {count}")
        my_choice = get_my_choice()
        comp_choice = get_comp_choice()
        print(f"I chose: {my_choice}")
        print(f"Computer chose: {comp_choice}")
        print(determine_winner(my_choice, comp_choice))
        count = count + 1
        n = n - 1

    print("\n")
    print(overall_winner(my_score, comp_score))

"""# Project - Hangman"""

import time
import random

def choose_word():
    words = ['python', 'programming', 'treasure', 'creative', 'medium', 'horror']
    return random.choice(words)

def wordDisplay(word, guesses):
    display_word = ''
    for char in word:
        if char in guesses:
            display_word += char + ' '
        else:
            display_word += '_ '
    return display_word.strip()

def winningCondition(updated_word, turns):
    if '_' not in updated_word:
        return 1  # User has won
    elif turns == 0:
        return 0  # User has lost

if __name__ == '__main__':
    name = input("What is your name? ")
    print("Hello, " + name + ", time to play hangman!")
    time.sleep(1)
    print("Start guessing...\n")
    time.sleep(0.5)

    word = choose_word()
    turns = len(word)   # number of turns = length of the word to be guessed
    guesses = ''

    while turns > 0:
        print("\nYou have", turns, 'guesses remaining')
        print(wordDisplay(word, guesses))
        guess = input("\nguess a character: ").lower()

        if guess in guesses:
            print("\nYou have already tried this letter")
            continue
        else:
            guesses += guess

        if guess not in word:
            print("\nWrong, Try again")

        updated_word = wordDisplay(word, guesses)
        turns -= 1
        flag = winningCondition(updated_word, turns)

        if flag == 0:
            print("\nYou Lose")
            print("The word was", word)
            break
        elif flag == 1:
            print("\nYou won!")
            print("You guessed", word, "correctly")
            break
    else:
        print("\nYou Lose")
        print("The word was", word)